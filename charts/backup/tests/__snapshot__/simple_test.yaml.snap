Matches the snapshot:
  1: |
    raw: Done
  2: |
    apiVersion: v1
    data:
      nginx.conf: |
        events {
            worker_connections 1024;
        }
        stream {
            server {
                listen 2222;
                proxy_pass destination.example.com:22;
            }
        }

        http {
            server {
                listen 80;
                location /healthz {
                    return 200 "OK";
                }
            }
        }
    kind: ConfigMap
    metadata:
      name: release-name-backup-proxy-config
      namespace: backup
  3: |
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      labels:
        app.kubernetes.io/component: sender
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: backup-sender
        app.kubernetes.io/version: 1.2.3
        helm.sh/chart: backup-0.1.0
      name: release-name-backup-sender
      namespace: backup
    spec:
      jobTemplate:
        spec:
          template:
            spec:
              concurrencyPolicy: Forbid
              containers:
                - args:
                    - |
                      apk add --no-cache rsync openssh-client
                      mkdir -p /root/.ssh
                      cp /root/ssh/backup-ssh-key /root/.ssh/id_rsa
                      chmod 600 /root/.ssh/id_rsa
                      cp /root/ssh/known_hosts /root/.ssh/known_hosts
                      rsync -avz --delete /src/var/srcA -e "ssh -p 2222" sshd@release-name-backup-proxy:/dst/var/srcA
                      rsync -avz --delete /src/var/srcB -e "ssh -p 2222" sshd@release-name-backup-proxy:/dst/var/srcB
                  command:
                    - /bin/sh
                    - -c
                  image: alpine:3.20
                  name: rsync
                  resources:
                    limits:
                      memory: 200Mi
                    requests:
                      cpu: 100m
                      memory: 100Mi
                  volumeMounts:
                    - mountPath: /src/var/srcA
                      name: src--var-srca
                    - mountPath: /src/var/srcB
                      name: src--var-srcb
                    - mountPath: /root/ssh
                      name: ssh-key
              hostname: rsync-sender
              restartPolicy: OnFailure
              volumes:
                - name: src--var-srca
                  persistentVolumeClaim:
                    claimName: release-name-backup--var-srca
                - name: src--var-srcb
                  persistentVolumeClaim:
                    claimName: release-name-backup--var-srcb
                - name: ssh-key
                  secret:
                    defaultMode: 384
                    secretName: ssh-private-key
      schedule: 13 * * * *
  4: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/component: proxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: backup-proxy
        app.kubernetes.io/version: 1.2.3
        helm.sh/chart: backup-0.1.0
      name: release-name-backup-proxy
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/component: proxy
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/name: backup-proxy
      template:
        metadata:
          labels:
            app.kubernetes.io/component: proxy
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: backup-proxy
            app.kubernetes.io/version: 1.2.3
            helm.sh/chart: backup-0.1.0
        spec:
          containers:
            - image: nginx:alpine
              name: nginx
              ports:
                - containerPort: 2222
                - containerPort: 80
              volumeMounts:
                - mountPath: /etc/nginx/nginx.conf
                  name: nginx-config
                  resources: null
                  subPath: nginx.conf
          nodeSelector:
            location: home
          securityContext: {}
          serviceAccountName: release-name-backup
          tolerations:
            - effect: NoExecute
              key: location
              operator: Equal
              value: home
          volumes:
            - configMap:
                name: release-name-backup-proxy-config
              name: nginx-config
  5: |
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: release-name-backup--var-srca
      namespace: backup
    spec:
      accessModes:
        - ReadOnlyMany
      resources:
        requests:
          storage: 100Gi
      storageClassName: local-storage
      volumeName: release-name-backup--var-srca
  6: |
    apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: release-name-backup--var-srca
      namespace: backup
    spec:
      accessModes:
        - ReadOnlyMany
      capacity:
        storage: 100Gi
      local:
        path: /var/srcA
      nodeAffinity:
        required:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - sp
      persistentVolumeReclaimPolicy: Retain
      storageClassName: local-storage
      volumeMode: Filesystem
  7: |
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: release-name-backup--var-srcb
      namespace: backup
    spec:
      accessModes:
        - ReadOnlyMany
      resources:
        requests:
          storage: 100Gi
      storageClassName: local-storage
      volumeName: release-name-backup--var-srcb
  8: |
    apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: release-name-backup--var-srcb
      namespace: backup
    spec:
      accessModes:
        - ReadOnlyMany
      capacity:
        storage: 100Gi
      local:
        path: /var/srcB
      nodeAffinity:
        required:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - sp
      persistentVolumeReclaimPolicy: Retain
      storageClassName: local-storage
      volumeMode: Filesystem
  9: |
    apiVersion: v1
    kind: Service
    metadata:
      name: release-name-backup-proxy
      namespace: backup
    spec:
      ports:
        - port: 2222
          protocol: TCP
          targetPort: 2222
      selector:
        app.kubernetes.io/component: proxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: backup-proxy
        app.kubernetes.io/version: 1.2.3
        helm.sh/chart: backup-0.1.0
        matchLabels: null
  10: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/component: proxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: backup-proxy
        app.kubernetes.io/version: 1.2.3
        helm.sh/chart: backup-0.1.0
      name: release-name-backup
